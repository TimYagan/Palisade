trigger:
  batch: true
  branches:
    include:
    - 'gh-163-azure-aks'
  paths:
    include:
    - azure-pipelines.maven.yaml
    - example/deployment/local-docker/*
    - example/deployment/Azure-AKS/devops-pipelines/azure-pipelines.docker.yaml
    - example/deployment/Azure-AKS/devops-pipelines/azure-pipelines.docker-template.yaml

stages:
- stage: Maven_Build  
  jobs:
  - job: Maven_Build
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        goals: 'clean install'

    - task: CopyFiles@2
      inputs:
        #sourceFolder: # Optional
        contents: example/deployment/local-docker/**/docker/bin/**/*
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: local-docker'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/example/deployment/local-docker'
        artifactName: local-docker

  - job: Docker build config-service
    displayName: config-service
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: config-service
  - job: Docker build configure-service
    displayName: configure-service
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: configure-services
  - job: Docker build configure-example
    displayName: configure-example
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: configure-example
  - job: Docker build data-service
    displayName: data-service
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: data-service
  - job: Docker build etcd
    displayName: etcd
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: etcd
  - job: Docker build palisade-service
    displayName: palisade-service
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: palisade-service
  - job: Docker build policy-service
    displayName: policy-service
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: policy-service
  - job: Docker build resource-service
    displayName: resource-service
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: resource-service
  - job: Docker build user-service
    displayName: user-service
    dependsOn: Maven_Build
    steps:
      - template: azure-pipelines.docker-template.yaml
        parameters:
          imageName: user-service

  - job: Helm deploy
    dependsOn: 
      - Docker build etcd
      - Docker build config-service
      - Docker build configure-services
      - Docker build user-service
      - Docker build policy-service
      - Docker build resource-service
      - Docker build data-service
      - Docker build palisade-service
      - Docker build configure-example
    steps:
      - task: HelmDeploy@0
        displayName: 'helm upgrade'
        inputs:
          azureSubscription: 'palisade_rm'
          azureResourceGroup: 'tmp-palisade-aks'
          kubernetesCluster: 'palisade-aks'
          command: upgrade
          chartType: FilePath
          chartPath: example/deployment/Azure-AKS/helm/palisade
          releaseName: palisade
          overrideValues: 'image.registry=$(registry_dns),image.tag=latest'
          arguments: '--timeout 600 --force'